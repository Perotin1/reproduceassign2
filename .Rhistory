ylab = "Emissions (Kilotons)", col = 1, pch = 16,
main = "Total US PM25 Emissions by year", axes = FALSE)
axis(1, at = seq(1999,2008,3))
axis(2, at = seq(3000,7500,500))
plot(c(1999,2002,2005,2008), sum_by_year/1000, xlab = "Year", ylab = "Emissions (Kilotons)", col = 1, pch = 16, main = "Total US PM25 Emissions by year")
source("plot1.R")
source("plot1.R")
plot(c(1999,2002,2005,2008), balt_sum_by_year, xlab = "Year", ylab = "Emissions (tons)", col = 1, pch = 16, main = "Baltimore City PM25 Emissions by year", xlim = c(1999,2008))
plot(c(1999,2002,2005,2008), balt_sum_by_year, xlab = "Year", ylab = "Emissions (tons)", col = 1, pch = 16, main = "Baltimore City PM25 Emissions by year", xlim = c(1999,2008), axes = FALSE)
axis(1, at = seq(1999,2008,3))
axis(2, at = seq(1500,3500,500))
axis(2, at = seq(1500,3500,500))
box()
source("plot1.R")
source("plot2.R")
source("plot1.R")
source("plot2.R")
source("plot1.R")
source("plot2.R")
?qplot
qplot(Emissions, year, data = subset(NEI, fips == "24510"), color = type)
balt_sum_by_type <- with(subset(NEI, fips == "24510"),
tapply(Emissions, type, sum, na.rm = TRUE))
?split
split(NEI, year, type)
split(NEI, factor(year), factor(type)
)
split(NEI, NEI$year, NEI$type)
NEI_year_type <- split(NEI, list(NEI$year, NEI$type))
NEI_year_type[1][1]
NEI_year_type <- split(NEI$Emissions, list(NEI$year, NEI$type))
balt_sum_by_type_year <- sapply(NEI_year_type, sum)
balt_sum_by_type_year
balt_non_road <- balt_sum_by_type_year[1:4]
balt_non_point <- balt_sum_by_type_year[5:8]
balt_on_road <- balt_sum_by_type_year[9:12]
balt_point <- balt_sum_by_type_year[13:16]
balt_NEI <- data.fram(nonpoint = balt_non_point, nonroad = balt_non_road, onroad = balt_on_road, point = balt_point)
balt_NEI <- data.frame(nonpoint = balt_non_point, nonroad = balt_non_road, onroad = balt_on_road, point = balt_point)
balt_NEI
row.names(balt_NEI) <- c(1999,2002,2005,2008)
balt_NEI
library(dplyr)
cbind(balt_NEI, c(1999,2002,2005,2008))
balt_NEI <- cbind(balt_NEI, year = c(1999,2002,2005,2008))
balt_NEI
row.names(balt_NEI) <- NULL
balt_NEI
balt_NEI <- balt_NEI[,1:4]
balt_NEI <- cbind(year = c(1999,2002,2005,2008), balt_NEI)
balt_NEI
library(reshape)
melt(balt_NEI, id = "year")
melt_balt_NEI <- melt(balt_NEI, id = "year")
qplot(year, value, col = variable)
names(melt_balt_NEI)
qplot(year, value, col = variable)
qplot(year, value, data = melt_balt_NEI, col = variable)
qplot(year, value, data = melt_balt_NEI, col = variable, geom = c("point","smooth"))
qplot(year, value, data = melt_balt_NEI, col = variable)
names(melt_balt_NEI) <- c("Year", "SourceType", "Emissions")
qplot(year, value, data = melt_balt_NEI, col = variable)
qplot(Year, Emissions, data = melt_balt_NEI, col = SourceType)
balt_NEI_year_type <- split(Emissions, list(NEI$year, NEI$type))
balt_NEI_year_type <- with(subset(NEI, fips=="24510"), split(Emissions, list(year, type)))
balt_sum_by_type_year <- sapply(balt_NEI_year_type, sum)
balt_sum_by_type_year
bsbty <- balt_sum_by_type_year
balt_t_y <- data.frame(nonroad = bsbty[1:4],nonpoint = bsbty[5:8],onroad = bybty[9:12],point = bsbty[13:16])
balt_t_y <- data.frame(nonroad = bsbty[1:4],nonpoint = bsbty[5:8],onroad = bsbty[9:12],point = bsbty[13:16])
balt_t_y
balt_t_y <- data.frame(year = c(1999,2002,2005,2008), nonroad = bsbty[1:4],nonpoint = bsbty[5:8],onroad = bsbty[9:12],point = bsbty[13:16], row.names = NULL )
balt_t_y
balt_melt <- melt(balt_t_y, id = "year")
balt_melt
qplot(year, value, data = balt_melt, col = variable, xlab = "Year", ylab = "Emissions (tons)", main = "Baltimore City PM2.5 Emissions by type of source")
a <- ggplot(balt_melt, aes(year, value, group = variable, col = variable)) + geom_point()
a
a + scale_colour_discrete(name = " Emission Source Type", breaks = c("nonroad","nonpoint","onroad","point"), labels = c("Non-Road","Non-Point","On-Road","Point"))
b <- a + scale_colour_discrete(name = " Emission Source Type", breaks = c("nonroad","nonpoint","onroad","point"), labels = c("Non-Road","Non-Point","On-Road","Point"))
head(NEI)
ggplot(subset(NEI, fips=="24510"), aes(year,emissions)) + geom_point()
ggplot(subset(NEI, fips=="24510"), aes(year,Emissions)) + geom_point()
g <- ggplot(subset(NEI, fips=="24510"), aes(year,Emissions)) + geom_point()
g + facet_grid(type ~ year)
b <- a + scale_colour_discrete(name = " Emission Source Type", breaks = c("nonroad","nonpoint","onroad","point"), labels = c("Non-Road","Non-Point","On-Road","Point"))
b
a
balt_melt
balt_t_y
b
b + ggtitle("Baltimore City PM2.5 emissions by year and type") +geom_smooth()
ggplot(subset(NEI, fips=="24510"), aes(year,emissions)) + geom_point()
ggplot(subset(NEI, fips=="24510"), aes(year,Emissions)) + geom_point()
ggplot(subset(NEI, fips=="24510"), aes(year,Emissions, group = type, col = type.convert)) + geom_smooth()
ggplot(subset(NEI, fips=="24510"), aes(year,Emissions, group = type, col = type)) + geom_smooth()
ggplot(subset(NEI, fips=="24510"), aes(year,Emissions, group = type, col = type)) + geom_point()
a <- ggplot(subset(NEI, fips=="24510"), aes(year,Emissions, group = type, col = type)) + geom_point()
a + geom_smooth()
b + ggtitle("Baltimore City PM2.5 emissions by year and type") +geom_smooth()
b + ggtitle("Baltimore City PM2.5 emissions by year and type") +geom_smooth() + labs(x = "Year", y = Emissions (tons))
b + ggtitle("Baltimore City PM2.5 emissions by year and type") +geom_smooth() + labs(x = "Year", y = "Emissions (tons)")
source("plot3.R")
balt_NEI_year_type <- with(subset(NEI, fips=="24510"),
split(Emissions, list(year, type)))
bsbty <- sapply(balt_NEI_year_type, sum)
balt_t_y <- data.frame(year = c(1999,2002,2005,2008), nonroad = bsbty[1:4],
nonpoint = bsbty[5:8],onroad = bsbty[9:12],point = bsbty[13:16],
row.names = NULL )
balt_melt <- melt(balt_t_y, id = "year")
a <- ggplot(balt_melt, aes(year, value, group = variable, col = variable))
b <- a + scale_colour_discrete(name = " Emission Source Type",
breaks = c("nonroad","nonpoint","onroad","point"),
labels = c("Non-Road","Non-Point","On-Road","Point"))
b + ggtitle("Baltimore City PM2.5 emissions by year and type") + geom_smooth() +
labs(x = "Year", y = "Emissions (tons)")
source("plot3.R")
source("plot3.R")
?ggsave
source("plot3.R")
head(SCC)
names(SCC)
head(SCC)
head(NEI)
head(NEI)
names(SCC)
head(SCC)
length(unique(NET$Short.Name))
length(unique(NEI$Short.Name))
a <- unique(NEI$Short.Name)
?unique
a <- unique(SCC$Short.Name)
sum(grep("coal", SCC$Short.Name))
a <- grep("coal", SCC$Short.Name)
a <- grep("generation", SCC$SCC.Level.Two)
a <- grep("[Gg]eneration", SCC$SCC.Level.Two)
a
names(SCC)
a <- unique(EI.Sector)
a <- unique(SCC$EI.Sector)
a
length(SCC$EI.Sector)
sum(is.na(SCC$EI.Sector))
sum(is.na(SCC$EI.Sector))
?is.na
sum(is.na(SCC$Option.Group))
a <- subset(SCC, SCC$EI.Sector=="")
a <- subset(SCC, EI.Sector=="")
a
b <- subset(SCC, EI.Sector %in% a)
a <- unique(SCC$EI.Sector)
b <- subset(SCC, EI.Sector %in% a)
b <- subset(SCC, coal %in% Short.Name)
b <- subset(SCC, "coal" %in% Short.Name)
b
b <- subset(SCC, "[Cc]oal" %in% Short.Name)
b
a <- unique(SCC$EI.Sector)
a
a <- grep("[Cc]oal", SCC$Short.Name)
a
a <- grep("[Cc]oal", SCC$Short.Name, value = TRUE)
a <- grep("[Cc]oal", SCC$Short.Name, value = TRUE)a
a <- grep("[Cc]oal", SCC$Short.Name, value = TRUE)
a
c <- unique(SCC$SCC.Level.One)
c
c <- unique(SCC$SCC.Level.Two)
c
c <- unique(SCC$SCC.Level.Three)
head(c)
grep("[Cc]oal",c, value = TRUE)
d <- SCC[grep("[Cc]oal",c,),]
d
head(SCC)
length(names(SCC))
class(grep("[Cc]oal",c, value = TRUE))
grep("[Cc]oal",c, value = TRUE)
class(grep("[Cc]oal",c))
source("coalfinder.R")
grep("[Cc]oal",c)
source("coalfinder.R")
a
coal <- unique(a)
SCC[coal,]
unique(SCC[coal,]$EI.Sector)
source("combfinder.R")
comb <- unique(e)
unique(SCC[comb,]$EI.Sector)
coalcomb <- intersect(coal,comb)
coalcomb
unique(SCC[coalcomb,]$EI.Sector)
SCC[coalcomb,]$EI.Sector
SCC[coalcomb,]$Short.Name
source("coalfinder.R")
coal <- unique(a)
coalcomb <- intersect(coal,comb)
coalcomb
SCC[coalcomb,]$Short.Name
SCC[coalcomb,]$SCC
head(NEI)
subset(NEI, NEI$SCC %in% SCC[coalcomb,]$SCC)
CC <- SCC
rm(SCC)
subset(NEI, NEI$SCC %in% CC[coalcomb,]$SCC)
NEI_coalcomb <- subset(NEI, NEI$SCC %in% CC[coalcomb,]$SCC)
source("plot4.R")
rm(list = ls())
NEI <- readRDS("summarySCC_PM25.rds")
CC <- readRDS("Source_Classification_Code.rds")
a <- grep("vehicle",CC$Short.Name)
a <- grep("vehicle",CC$EI.Sector)
a <- grep("road",CC$EI.Sector)
a <- grep("road",CC$Short.Name)
a <- grep("road",CC$Short.Name, value = TRUE)
a
a <- subset(CC, CC$SCC %in% subset(NEI, type == "onroad")$SCC)
a <- subset(NEI, type == "onroad")$SCC
unique(NEI$type)
a <- subset(CC, CC$SCC %in% subset(NEI, type == "ON-ROAD")$SCC)
unique(a$Short.Name)
a <- subset(CC, CC$SCC %in% subset(NEI, type == "NON-ROAD")$SCC)
a
unique(a$Short.Name)
unique(CC$EI.Sector)
b <- subset(CC, EI.Sector %in% unique(CC$EI.Sector[21:24]))
b
grep("vehicle", CC$EI.Sector)
grep("Vehicle", CC$EI.Sector)
a <- CC[grep("Vehicle", CC$EI.Sector),]
unique(a$EI.Sector)
motors <- subset(NEI, NEI$SCC %in% a$SCC)
head(motors)
b
unique(motors$type)
point_motors <- subset(motors, type == "POINT")
point_motors
subset(CC, CC$SCC %in% point_motors$SCC)
a <- subset(NEI, type == "ON-ROAD")
balt_motors <- subset(motors, fips == "24510")
sum_by_year <- with(balt_motors, tapply(Emissions, year, sum, na.rm = TRUE))
plot(c(1999,2002,2005,2008), sum_by_year/1000, xlab = "Year",
ylab = "Emissions (Thousands of tons)", col = 1, pch = 16,
main = "Total US PM25 Emissions by year", axes = FALSE)
axis(1, at = seq(1999,2008,3))
axis(2)
box()
a
vehicle_codes <- CC[grep("Vehicle", CC$EI.Sector),]$SCC
unique(vehicle_codes)
vehicle_codes <- CC[grep("Vehicle", CC$EI.Sector),]
unique(vehicle_codes$EI.Sector)
library(dplyr)
b
mutate(b, a = 1)
b
motors[111,]$SCC
motors[111,]$fips
motors[1111,]$fips
motors[11111,]$fips
g <- motors[fips == 24015,]
g <- motors[motors$fips == 24015,]
unique(g$fips)
balt_motors <- mutate(balt_motors,CC[CC$SCC == SCC]$EI.Sector)
names(balt_motors)
exp <- merge(balt_motors, CC, by = "SCC")
names(exp)
exp[,c(1:6,9)]
exp1 <- exp[,c(1:6,9)]
unique(exp1$EI.Sector)
balt_motors <- merge(balt_motors, CC, by = "SCC")[,c(1:6,9)]
group_by(balt_motors,EI.Sector,year)
summarise(balt_motors,mean(Emissions))
summarise(balt_motors, avgEmissions = mean(Emissions))
summarise(balt_motors, avgEmissions = mean(Emissions))
summarise(balt_motors, avgEmissions = sum(Emissions))
summarise(balt_motors, YearEmissions = sum(Emissions))
balt_motors %>%  group_by(year,EI.Sector) %>% summarise(yEmissions = sum(Emissions)) %>% summarise(ySectEmissions = sum(Emissions))
traceback()
balt_motors %>%  group_by(year,EI.Sector) %>% summarise(yEmissions = sum(Emissions)) %>% summarise(ySectEmissions = sum(yEmissions))
group_by(balt_motors,EI.Sector,year)
a <- summarise(balt_motors, Emis = sum(Emissions))
a
str(t)
summary(t)
summary(a)
str(a)
balt_motors <- group_by(balt_motors,EI.Sector,year)
balt_motors %>%  summarise(yEmissions = sum(Emissions)) %>% summarise(ySectEmissions = sum(yEmissions))
balt_motors <- group_by(balt_motors,EI.Sector,year)
balt_motors %>%  summarise(yEmissions = sum(Emissions))
summarise(balt_motors, Source_Emissions = sum(Emissions))
source("plot3.R")
source("plot3.R")
source("plot3.R")
source("plot5.R")
source("plot5.R")
source("plot5.R")
balt_motors <- subset(motors, fips == "24510")
balt_motors <- merge(balt_motors, CC, by = "SCC")[,c(1:6,9)]
balt_motors <- group_by(balt_motors,EI.Sector,year)
s_b_motors <- cbind(County = "Baltimore City", summarise(balt_motors, Source_Emissions = sum(Emissions)))
la_motors <- subset(motors, fips == "06037")
la_motors <- merge(la_motors, CC, by = "SCC")[,c(1:6,9)]
la_motors <- group_by(la_motors,EI.Sector,year)
s_la_motors <- cbind(County = "Los Angeles County", summarise(la_motors, Source_Emissions = sum(Emissions)))
s_motors <- rbind(s_la_motors,s_b_motors)
balt_motors <- subset(motors, fips == "24510")
balt_motors <- merge(balt_motors, CC, by = "SCC")[,c(1:6,9)]
balt_motors <- group_by(balt_motors,EI.Sector,year)
s_b_motors <- cbind(County = rep("Baltimore City",16), summarise(balt_motors, Source_Emissions = sum(Emissions)))
la_motors <- subset(motors, fips == "06037")
la_motors <- merge(la_motors, CC, by = "SCC")[,c(1:6,9)]
la_motors <- group_by(la_motors,EI.Sector,year)
s_la_motors <- cbind(County = rep("Los Angeles County",16), summarise(la_motors, Source_Emissions = sum(Emissions)))
s_motors <- rbind(s_la_motors,s_b_motors)
s_motors
ggplot(s_motors, aes(year, Source_Emissions, group = EI.Sector, col = EI.Sector)) +
ggtitle("PM2.5 vehicle sourced emissions by year and type") + facet_grid(.~County) + geom_point() +
geom_smooth(method = "lm", se = F) + labs(x = "Year", y = "Emissions (tons)") +
scale_colour_discrete(name = "Vehicle Type",
breaks = c("Mobile - On-Road Diesel Heavy Duty Vehicles","Mobile - On-Road Diesel Light Duty Vehicles","Mobile - On-Road Gasoline Heavy Duty Vehicles","Mobile - On-Road Gasoline Light Duty Vehicles"),
labels = c("Diesel Heavy Duty Vehicles","Diesel Light Duty Vehicles","Gasoline Heavy Duty Vehicles","Gasoline Light Duty Vehicles"))
ggplot(s_motors, aes(year, log10(Source_Emissions), group = EI.Sector, col = EI.Sector)) +
ggtitle("PM2.5 vehicle sourced emissions by year and type") + facet_grid(.~County) + geom_point() +
geom_smooth(method = "lm", se = F) + labs(x = "Year", y = "Emissions (tons)") +
scale_colour_discrete(name = "Vehicle Type",
breaks = c("Mobile - On-Road Diesel Heavy Duty Vehicles","Mobile - On-Road Diesel Light Duty Vehicles","Mobile - On-Road Gasoline Heavy Duty Vehicles","Mobile - On-Road Gasoline Light Duty Vehicles"),
labels = c("Diesel Heavy Duty Vehicles","Diesel Light Duty Vehicles","Gasoline Heavy Duty Vehicles","Gasoline Light Duty Vehicles"))
ggplot(s_motors, aes(year, Source_Emissions, group = EI.Sector, col = EI.Sector)) +
ggtitle("PM2.5 vehicle sourced emissions by year and type") + facet_grid(.~County) + geom_point() +
geom_smooth(method = "lm", se = F) + labs(x = "Year", y = "Emissions (tons)") +
scale_colour_discrete(name = "Vehicle Type",
breaks = c("Mobile - On-Road Diesel Heavy Duty Vehicles","Mobile - On-Road Diesel Light Duty Vehicles","Mobile - On-Road Gasoline Heavy Duty Vehicles","Mobile - On-Road Gasoline Light Duty Vehicles"),
labels = c("Diesel Heavy Duty Vehicles","Diesel Light Duty Vehicles","Gasoline Heavy Duty Vehicles","Gasoline Light Duty Vehicles")) +
scale_y_log10()
source("plot6.R")
source("plot3.R")
source("plot6.R")
source("plot4.R")
head(NEI_coalcomb)
unique(NEI_coalcomb$SCC)
source("plot4.R")
head(NEI_coalcomb)
unique(EI.Sector)
unique(NEI_coalcomb$EI.Sector)
n <- NEI_coalcomb[NEI_coalcomb$EI.Sector== "Fuel Comb - Residential - Other",]
head(n)
CC[CC$SCC==2104001000,]
head(NEI_coalcomb)
unique(NEI_coalcomb$EI.Sector)
source("plot4.R")
source("plot5.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
?require
install.packages("scales")
source("plot4.R")
traceback()
source("plot4.R")
traceback()
source("plot4.R")
source("plot4.R")
?scale_y_log10
source("plot4.R")
library(scales)
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot1.R")
source("plot1.R")
source("plotall.R")
source("plot1.R")
traceback()
source("plot1.R")
source("plot1.R")
source("plot1.R")
source("plot2.R")
setwd("..")
rm(list = ls())
quit()
setwd("researchassign2")
list.files()
source("clean_script.R")
g <- setdiff(rel_data_1$EVTYPE, ev_table) ##removes exact matches
g <- setdiff(rel_data_1$EVTYPE, ev_table) ##removes exact matches
bad_evtype <- rbind(bad_evtype,rel_data_1[rel_data_1$EVTYPE %in% g,])
rel_data_1 <- rel_data_1[!(rel_data_1$EVTYPE %in% g),]
g <- unique(rel_data_1$EVTYPE)
g
install.packages("qdap")
library(qdap)
?mgsub
source("injury_fatal_plot.R")
source("injury_fatal_plot.R")
print(g)
print(h)
print(g)
source("damgexp.fixer.R")
source("dmgexp.fixer.R")
source("dmgexpfixer.R")
source("dmgexp_fixer.R")
conv_exp
y <- mgsub(key,value,rel_data_2$PROPDMGEXP)
traceback()
z <- rel_data_2[rel_data_2$PROPDMGEXP == "",]
source("dmgexp_fixer.R")
conv_exp
y <- mgsub(key,value,rel_data_2$PROPDMGEXP)
unique(y$PROPDMGEXP)
head(y)
unique(y)
source("dmgexp_fixer.R")
y <- mgsub(key,value,rel_data_2$PROPDMGEXP)
unique(y)
value
y <- as.integer(y)
unique(y)
unique(rel_data_2$PROPDMGEXP)
source("dmgexp_fixer.R")
y <- mgsub(key,value,rel_data_2$PROPDMGEXP)
unique(y)
?mutate
conv_exp
conv_exp[key==h]
conv_exp[key=="h"]
conv_exp[key=="h",]
conv_exp[key=="h",]$value
mutate(rel_data_2, truePROPDMGEXP= conv_exp[key==PROPDMGEXP,]$value)
y <- which(rel_data_2$PROPDMGEXP %in% conv_exp$key)
unique(y)
x <- which(rel_data_2$PROPDMGEXP == key[1])
x <- which(rel_data_2$PROPDMGEXP == key[2])
x <- which(rel_data_2$PROPDMGEXP == key[3])
x <- which(rel_data_2$PROPDMGEXP == key[4])
x <- which(rel_data_2$PROPDMGEXP == key[5])
x <- which(rel_data_2$PROPDMGEXP == key[6])
x <- which(rel_data_2$PROPDMGEXP == key[7])
x <- which(rel_data_2$PROPDMGEXP == key[8])
x <- which(rel_data_2$PROPDMGEXP == key[h])
x <- which(rel_data_2$PROPDMGEXP == key[9])
x <- which(rel_data_2$PROPDMGEXP == key[10])
x <- which(rel_data_2$PROPDMGEXP == key[11])
x <- which(rel_data_2$PROPDMGEXP == key[12])
x <- which(rel_data_2$PROPDMGEXP == key[13])
x <- which(rel_data_2$PROPDMGEXP == key[14])
x <- which(rel_data_2$PROPDMGEXP == key[15])
x <- which(rel_data_2$PROPDMGEXP == key[16])
source("dmgexp_fixer.R")
unique(rel_data_2$PROPDMGEXP)
unique(rel_data_1$PROPDMGEXP)
unique(tolower(rel_data_1$PROPDMGEXP))
source("dmgexp_fixer.R")
unique(rel_data_1$PROPDMGEXP)
unique(tolower(rel_data_1$PROPDMGEXP))
source("dmgexp_fixer.R")
unique(rel_data_1$PROPDMGEXP)
unique(rel_data_2$PROPDMGEXP)
source("dmgexp_fixer.R")
unique(rel_data_1$PROPDMGEXP)
unique(rel_data_2$PROPDMGEXP)
class(rel_data_2$PROPDMGEXP)
source("dmgexp_fixer.R")
unique(rel_data_2$PROPDMGEXP)
class(rel_data_2$PROPDMGEXP)
source("dmgexp_fixer.R")
class(rel_data_2$PROPDMGEXP)
unique(rel_data_2$PROPDMGEXP)
mutate(rel_data_2, trueCROPDMG = CROPDMG * CROPDMGEXP, truePROPDMG = PROPDMG *PROPDMGEXP)
x <- mutate(rel_data_2, trueCROPDMG = CROPDMG * CROPDMGEXP, truePROPDMG = PROPDMG *PROPDMGEXP)
head(x)
x <- group_by(x, EVTYPE)
y <- summarise(x, propdmg = sum(truePROPDMG), cropdmg = sum(trueCROPDMG))
y
?melt
library(reshape2)
library(data.table)
z <- melt(y, id.vars = EVTYPE)
z <- melt(y, id.vars = "EVTYPE")
z
i <- ggplot(data = z, aes(EVTYPE, value, col = variable))
j <- i + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90,hjust = 1, vjust = 0.5))
print(j)
library(scales)
j <- i + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90,hjust = 1, vjust = 0.5)) + scale_y_log10()
print(j)
log10(0)
?mgrep
?mgsub
?scale_y_log10
source("dmgexp_fixer>R")
source("dmgexp_fixer.R")
source("dmgexp_fixer.R")
print(j)
source("dmgexp_fixer.R")
print(j)
j <- i + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90,hjust = 1, vjust = 0.5))
print(j)
source("dmgexp_fixer.R")
print(j)
j <- i + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90,hjust = 1, vjust = 0.5))
print(j)
source("dmgexp_fixer.R")
print(j)
source("dmgexp_fixer.R")
source("dmgexp_fixer.R")
source("dmgexp_fixer.R")
source("dmgexp_fixer.R")
j

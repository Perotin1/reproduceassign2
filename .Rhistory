balt_motors %>%  group_by(year,EI.Sector) %>% summarise(yEmissions = sum(Emissions)) %>% summarise(ySectEmissions = sum(Emissions))
traceback()
balt_motors %>%  group_by(year,EI.Sector) %>% summarise(yEmissions = sum(Emissions)) %>% summarise(ySectEmissions = sum(yEmissions))
group_by(balt_motors,EI.Sector,year)
a <- summarise(balt_motors, Emis = sum(Emissions))
a
str(t)
summary(t)
summary(a)
str(a)
balt_motors <- group_by(balt_motors,EI.Sector,year)
balt_motors %>%  summarise(yEmissions = sum(Emissions)) %>% summarise(ySectEmissions = sum(yEmissions))
balt_motors <- group_by(balt_motors,EI.Sector,year)
balt_motors %>%  summarise(yEmissions = sum(Emissions))
summarise(balt_motors, Source_Emissions = sum(Emissions))
source("plot3.R")
source("plot3.R")
source("plot3.R")
source("plot5.R")
source("plot5.R")
source("plot5.R")
balt_motors <- subset(motors, fips == "24510")
balt_motors <- merge(balt_motors, CC, by = "SCC")[,c(1:6,9)]
balt_motors <- group_by(balt_motors,EI.Sector,year)
s_b_motors <- cbind(County = "Baltimore City", summarise(balt_motors, Source_Emissions = sum(Emissions)))
la_motors <- subset(motors, fips == "06037")
la_motors <- merge(la_motors, CC, by = "SCC")[,c(1:6,9)]
la_motors <- group_by(la_motors,EI.Sector,year)
s_la_motors <- cbind(County = "Los Angeles County", summarise(la_motors, Source_Emissions = sum(Emissions)))
s_motors <- rbind(s_la_motors,s_b_motors)
balt_motors <- subset(motors, fips == "24510")
balt_motors <- merge(balt_motors, CC, by = "SCC")[,c(1:6,9)]
balt_motors <- group_by(balt_motors,EI.Sector,year)
s_b_motors <- cbind(County = rep("Baltimore City",16), summarise(balt_motors, Source_Emissions = sum(Emissions)))
la_motors <- subset(motors, fips == "06037")
la_motors <- merge(la_motors, CC, by = "SCC")[,c(1:6,9)]
la_motors <- group_by(la_motors,EI.Sector,year)
s_la_motors <- cbind(County = rep("Los Angeles County",16), summarise(la_motors, Source_Emissions = sum(Emissions)))
s_motors <- rbind(s_la_motors,s_b_motors)
s_motors
ggplot(s_motors, aes(year, Source_Emissions, group = EI.Sector, col = EI.Sector)) +
ggtitle("PM2.5 vehicle sourced emissions by year and type") + facet_grid(.~County) + geom_point() +
geom_smooth(method = "lm", se = F) + labs(x = "Year", y = "Emissions (tons)") +
scale_colour_discrete(name = "Vehicle Type",
breaks = c("Mobile - On-Road Diesel Heavy Duty Vehicles","Mobile - On-Road Diesel Light Duty Vehicles","Mobile - On-Road Gasoline Heavy Duty Vehicles","Mobile - On-Road Gasoline Light Duty Vehicles"),
labels = c("Diesel Heavy Duty Vehicles","Diesel Light Duty Vehicles","Gasoline Heavy Duty Vehicles","Gasoline Light Duty Vehicles"))
ggplot(s_motors, aes(year, log10(Source_Emissions), group = EI.Sector, col = EI.Sector)) +
ggtitle("PM2.5 vehicle sourced emissions by year and type") + facet_grid(.~County) + geom_point() +
geom_smooth(method = "lm", se = F) + labs(x = "Year", y = "Emissions (tons)") +
scale_colour_discrete(name = "Vehicle Type",
breaks = c("Mobile - On-Road Diesel Heavy Duty Vehicles","Mobile - On-Road Diesel Light Duty Vehicles","Mobile - On-Road Gasoline Heavy Duty Vehicles","Mobile - On-Road Gasoline Light Duty Vehicles"),
labels = c("Diesel Heavy Duty Vehicles","Diesel Light Duty Vehicles","Gasoline Heavy Duty Vehicles","Gasoline Light Duty Vehicles"))
ggplot(s_motors, aes(year, Source_Emissions, group = EI.Sector, col = EI.Sector)) +
ggtitle("PM2.5 vehicle sourced emissions by year and type") + facet_grid(.~County) + geom_point() +
geom_smooth(method = "lm", se = F) + labs(x = "Year", y = "Emissions (tons)") +
scale_colour_discrete(name = "Vehicle Type",
breaks = c("Mobile - On-Road Diesel Heavy Duty Vehicles","Mobile - On-Road Diesel Light Duty Vehicles","Mobile - On-Road Gasoline Heavy Duty Vehicles","Mobile - On-Road Gasoline Light Duty Vehicles"),
labels = c("Diesel Heavy Duty Vehicles","Diesel Light Duty Vehicles","Gasoline Heavy Duty Vehicles","Gasoline Light Duty Vehicles")) +
scale_y_log10()
source("plot6.R")
source("plot3.R")
source("plot6.R")
source("plot4.R")
head(NEI_coalcomb)
unique(NEI_coalcomb$SCC)
source("plot4.R")
head(NEI_coalcomb)
unique(EI.Sector)
unique(NEI_coalcomb$EI.Sector)
n <- NEI_coalcomb[NEI_coalcomb$EI.Sector== "Fuel Comb - Residential - Other",]
head(n)
CC[CC$SCC==2104001000,]
head(NEI_coalcomb)
unique(NEI_coalcomb$EI.Sector)
source("plot4.R")
source("plot5.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
?require
install.packages("scales")
source("plot4.R")
traceback()
source("plot4.R")
traceback()
source("plot4.R")
source("plot4.R")
?scale_y_log10
source("plot4.R")
library(scales)
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot1.R")
source("plot1.R")
source("plotall.R")
source("plot1.R")
traceback()
source("plot1.R")
source("plot1.R")
source("plot1.R")
source("plot2.R")
setwd("..")
rm(list = ls())
quit()
setwd("researchassign")
setwd("researchassign2")
library(lubridate)
library(dplyr)
data <- read.csv("FStormData.csv.bz2")
data$EVTYPE <- tolower(data$EVTYPE)
data$BGN_DATE <- mdy_hms(as.character(data$BGN_DATE))
data$END_DATE <- mdy_hms(as.character(data$END_DATE))
ev_table <- tolower(readLines("ev_table.txt"))
rel_data <- data[,c("BGN_DATE","END_DATE","EVTYPE","FATALITIES","INJURIES","REMARKS")]
trim.leading <- function (x)  sub("^\\s+", "", x)
rel_data$EVTYPE <- trim.leading(rel_data$EVTYPE)
g <- rel_data[!(rel_data$EVTYPE %in% ev_table),] ##removes exact matches
g1 <- setdiff(rel_data$EVTYPE, ev_table) ##gets typo evtypes
h1 <- sapply(ev_table, grep, x = g1) ##gets indexes of partial matches to typo evtypes
h1 <- h1[lapply(h1,length)>0] ## removes empties
for(i in length(h1)) h1[i] <- as.integer(h1[i])
## h1_intersect <- function(l){
##        nms <- combn( names(l) , 2 , FUN = paste0 , collapse = "_" , simplify = FALSE )
##        ll <- combn( l , 2 , simplify = FALSE )
##        out <- lapply( ll , function(x) intersect( x[[1]] , x[[2]] )  )
##        setNames( out , nms )
##}
##h2 <- h1_intersect(h1)
##h2 <- h2[lapply(h2,length)>0]
h3 <- unique(unlist(h1))
N <- 367
h4 <- vector("list", N)
for(i in 1:N) { ## trying to get function to return index of lists of which h3[i] is an element
a <- logical()
for(j in 1:30){
a[[j]] <- h3[i] %in% h1[j]
}
b <- names(h1)[a]
h4[[i]] <- b
}
names(h4) <- h3
class(h1[30])
class(h1[30][[1]])
class(h1[30][[2]])
rel_data <- data[,c("BGN_DATE","END_DATE","EVTYPE","FATALITIES","INJURIES","REMARKS")]
trim.leading <- function (x)  sub("^\\s+", "", x)
rel_data$EVTYPE <- trim.leading(rel_data$EVTYPE)
g <- rel_data[!(rel_data$EVTYPE %in% ev_table),] ##removes exact matches
g1 <- setdiff(rel_data$EVTYPE, ev_table) ##gets typo evtypes
h1 <- sapply(ev_table, grep, x = g1) ##gets indexes of partial matches to typo evtypes
h1 <- h1[lapply(h1,length)>0] ## removes empties
lapply(h1,as.integer)
## h1_intersect <- function(l){
##        nms <- combn( names(l) , 2 , FUN = paste0 , collapse = "_" , simplify = FALSE )
##        ll <- combn( l , 2 , simplify = FALSE )
##        out <- lapply( ll , function(x) intersect( x[[1]] , x[[2]] )  )
##        setNames( out , nms )
##}
##h2 <- h1_intersect(h1)
##h2 <- h2[lapply(h2,length)>0]
h3 <- unique(unlist(h1))
N <- 367
h4 <- vector("list", N)
for(i in 1:N) { ## trying to get function to return index of lists of which h3[i] is an element
a <- logical()
for(j in 1:30){
a[[j]] <- h3[i] %in% h1[j][[1]]
}
b <- names(h1)[a]
h4[[i]] <- b
}
names(h4) <- h3
head(h4)
h5 <- h4[lapply(h4,length)<2]
head(h5)
lapply(h5,length)
unique(lapply(h5,length))
head(h4)
names(h5)
h6 <- h5
names(h6) <- g1[as.numeric(names(h5))]
head(h6)
h7 <- as.data.frame(h6)
h7
x <- rel_data$EVTYPE=="wildfires"
h5[1]
h5[1][[1]]
rel_data <- data[,c("BGN_DATE","END_DATE","EVTYPE","FATALITIES","INJURIES","REMARKS")]
trim.leading <- function (x)  sub("^\\s+", "", x)
rel_data$EVTYPE <- trim.leading(rel_data$EVTYPE)
g <- rel_data[!(rel_data$EVTYPE %in% ev_table),] ##removes exact matches
g1 <- setdiff(rel_data$EVTYPE, ev_table) ##gets typo evtypes
h1 <- sapply(ev_table, grep, x = g1) ##gets indexes of partial matches to typo evtypes
h1 <- h1[lapply(h1,length)>0] ## removes empties
lapply(h1,as.integer)
h3 <- unique(unlist(h1))
N <- 367
h4 <- vector("list", N)
for(i in 1:N) { ## trying to get function to return index of lists of which h3[i] is an element
a <- logical()
for(j in 1:30){
a[[j]] <- h3[i] %in% h1[j][[1]]
}
b <- names(h1)[a]
h4[[i]] <- b
}
names(h4) <- h3
h5 <- h4[lapply(h4,length)<2]
names(h5) <- g1[as.numeric(names(h5))]
for(i in length(h5)){
r <- rel_data$EVTYPE==names(h5)[i]
rel_data$EVTYPE[r] <- h5[1][[1]]
}
rel_data <- data[,c("BGN_DATE","END_DATE","EVTYPE","FATALITIES","INJURIES","REMARKS")]
trim.leading <- function (x)  sub("^\\s+", "", x)
rel_data$EVTYPE <- trim.leading(rel_data$EVTYPE)
g <- rel_data[!(rel_data$EVTYPE %in% ev_table),] ##removes exact matches
g1 <- setdiff(rel_data$EVTYPE, ev_table) ##gets typo evtypes
h1 <- sapply(ev_table, grep, x = g1) ##gets indexes of partial matches to typo evtypes
h1 <- h1[lapply(h1,length)>0] ## removes empties
h1 <- lapply(h1,as.integer)
h3 <- unique(unlist(h1))
N <- 367
h4 <- vector("list", N)
for(i in 1:N) { ## trying to get function to return index of lists of which h3[i] is an element
a <- logical()
for(j in 1:30){
a[[j]] <- h3[i] %in% h1[j][[1]]
}
b <- names(h1)[a]
h4[[i]] <- b
}
names(h4) <- h3
h5 <- h4[lapply(h4,length)<2]
names(h5) <- g1[as.numeric(names(h5))]
for(i in length(h5)){
r <- rel_data$EVTYPE==names(h5)[i]
rel_data$EVTYPE[r] <- h5[i][[1]]
}
g2 <- setdiff(rel_data$EVTYPE, ev_table)
rel_data <- data[,c("BGN_DATE","END_DATE","EVTYPE","FATALITIES","INJURIES","REMARKS")]
trim.leading <- function (x)  sub("^\\s+", "", x)
rel_data$EVTYPE <- trim.leading(rel_data$EVTYPE)
g <- rel_data[!(rel_data$EVTYPE %in% ev_table),] ##removes exact matches
g1 <- setdiff(rel_data$EVTYPE, ev_table) ##gets typo evtypes
h1 <- sapply(ev_table, grep, x = g1) ##gets indexes of partial matches to typo evtypes
h1 <- h1[lapply(h1,length)>0] ## removes empties
h1 <- lapply(h1,as.integer)
h3 <- unique(unlist(h1))
N <- 367
h4 <- vector("list", N)
for(i in 1:N) { ## trying to get function to return index of lists of which h3[i] is an element
a <- logical()
for(j in 1:30){
a[[j]] <- h3[i] %in% h1[j][[1]]
}
b <- names(h1)[a]
h4[[i]] <- b
}
names(h4) <- h3
h5 <- h4[lapply(h4,length)<2]
names(h5) <- g1[as.numeric(names(h5))]
for(i in 1:269){
r <- rel_data$EVTYPE==names(h5)[i]
rel_data$EVTYPE[r] <- h5[i][[1]]
}
g2 <- setdiff(rel_data$EVTYPE, ev_table)
h6 <- setdiff(h5,h5)
rel_data <- data[,c("BGN_DATE","END_DATE","EVTYPE","FATALITIES","INJURIES","REMARKS")]
trim.leading <- function (x)  sub("^\\s+", "", x)
rel_data$EVTYPE <- trim.leading(rel_data$EVTYPE)
g <- rel_data[!(rel_data$EVTYPE %in% ev_table),] ##removes exact matches
g1 <- setdiff(rel_data$EVTYPE, ev_table) ##gets typo evtypes
h1 <- sapply(ev_table, grep, x = g1) ##gets indexes of partial matches to typo evtypes
h1 <- h1[lapply(h1,length)>0] ## removes empties
h1 <- lapply(h1,as.integer)
h3 <- unique(unlist(h1))
N <- 367
h4 <- vector("list", N)
for(i in 1:N) { ## trying to get function to return index of lists of which h3[i] is an element
a <- logical()
for(j in 1:30){
a[[j]] <- h3[i] %in% h1[j][[1]]
}
b <- names(h1)[a]
h4[[i]] <- b
}
names(h4) <- g1[as.numeric(h3)]
h5 <- h4[lapply(h4,length)<2]
for(i in 1:269){
r <- rel_data$EVTYPE==names(h5)[i]
rel_data$EVTYPE[r] <- h5[i][[1]]
}
g2 <- setdiff(rel_data$EVTYPE, ev_table)
h6 <- setdiff(h4,h5)
h6
head(h5)
h6 <- h4[lapply(h4,length)>1]
h6
?grep
grep("flash",names(h6))
grep("flash",names(h6), value = TRUE)
rel_data <- data[,c("BGN_DATE","END_DATE","EVTYPE","FATALITIES","INJURIES","REMARKS")]
trim.leading <- function (x)  sub("^\\s+", "", x)
rel_data$EVTYPE <- trim.leading(rel_data$EVTYPE)
g <- rel_data[!(rel_data$EVTYPE %in% ev_table),] ##removes exact matches
g1 <- setdiff(rel_data$EVTYPE, ev_table) ##gets typo evtypes
h1 <- sapply(ev_table, grep, x = g1) ##gets indexes of partial matches to typo evtypes
h1 <- h1[lapply(h1,length)>0] ## removes empties
h1 <- lapply(h1,as.integer)
h3 <- unique(unlist(h1))
N <- 367
h4 <- vector("list", N)
for(i in 1:N) { ## trying to get function to return index of lists of which h3[i] is an element
a <- logical()
for(j in 1:30){
a[[j]] <- h3[i] %in% h1[j][[1]]
}
b <- names(h1)[a]
h4[[i]] <- b
}
names(h4) <- g1[as.numeric(h3)]
h5 <- h4[lapply(h4,length)<2]
for(i in 1:269){
r <- rel_data$EVTYPE==names(h5)[i]
rel_data$EVTYPE[r] <- h5[i][[1]]
}
h6 <- h4[lapply(h4,length)>1]
h7 <- h6[grep("flash",names(h6))]
for(i in 1:269){
r <- rel_data$EVTYPE==names(h5)[i]
rel_data$EVTYPE[r] <- "flash flood"
}
h8 <- h6[-(grep("flash",names(h6)))]
length(names(h6))
h8
grep("blizzard",h8)
grep("blizzard",h8, value = TRUE)
head(h8)
head(h8, n = 10)
rel_data <- data[,c("BGN_DATE","END_DATE","EVTYPE","FATALITIES","INJURIES","REMARKS")]
trim.leading <- function (x)  sub("^\\s+", "", x)
rel_data$EVTYPE <- trim.leading(rel_data$EVTYPE)
g <- rel_data[!(rel_data$EVTYPE %in% ev_table),] ##removes exact matches
g1 <- setdiff(rel_data$EVTYPE, ev_table) ##gets typo evtypes
h1 <- sapply(ev_table, grep, x = g1) ##gets indexes of partial matches to typo evtypes
h1 <- h1[lapply(h1,length)>0] ## removes empties
h1 <- lapply(h1,as.integer)
h3 <- unique(unlist(h1))
N <- 367
h4 <- vector("list", N)
for(i in 1:N) { ## trying to get function to return index of lists of which h3[i] is an element
a <- logical()
for(j in 1:30){
a[[j]] <- h3[i] %in% h1[j][[1]]
}
b <- names(h1)[a]
h4[[i]] <- b
}
names(h4) <- g1[as.numeric(h3)]
h5 <- h4[lapply(h4,length)<2]
for(i in 1:269){
r <- rel_data$EVTYPE==names(h5)[i]
rel_data$EVTYPE[r] <- h5[i][[1]]
}
h6 <- h4[lapply(h4,length)>1]
h7 <- h6[grep("flash",names(h6))]
for(i in 1:19){
r <- rel_data$EVTYPE==names(h7)[i]
rel_data$EVTYPE[r] <- "flash flood"
}
h8 <- h6[-(grep("flash",names(h6)))]
h9 <- h8[grep("blizzard",names(h6))]
for(i in 1:10){
r <- rel_data$EVTYPE==names(h9)[i]
rel_data$EVTYPE[r] <- "blizzard"
}
h10 <- h8[-(grep("blizzard",names(h6)))]
h10
grep("flood",h10, value = TRUE)
grep("coast",h10, value = TRUE)
h11 <- h10[grep("coast",names(h6))]
for(i in 1:5){
r <- rel_data$EVTYPE==names(h11)[i]
rel_data$EVTYPE[r] <- "coastal flood"
}
h12 <- h10[-(grep("coast",names(h6)))]
grep("flood",h12, value = TRUE)
rel_data <- data[,c("BGN_DATE","END_DATE","EVTYPE","FATALITIES","INJURIES","REMARKS")]
trim.leading <- function (x)  sub("^\\s+", "", x)
rel_data$EVTYPE <- trim.leading(rel_data$EVTYPE)
g <- rel_data[!(rel_data$EVTYPE %in% ev_table),] ##removes exact matches
g1 <- setdiff(rel_data$EVTYPE, ev_table) ##gets typo evtypes
h1 <- sapply(ev_table, grep, x = g1) ##gets indexes of partial matches to typo evtypes
h1 <- h1[lapply(h1,length)>0] ## removes empties
h1 <- lapply(h1,as.integer)
h3 <- unique(unlist(h1))
N <- 367
h4 <- vector("list", N)
for(i in 1:N) { ## trying to get function to return index of lists of which h3[i] is an element
a <- logical()
for(j in 1:30){
a[[j]] <- h3[i] %in% h1[j][[1]]
}
b <- names(h1)[a]
h4[[i]] <- b
}
names(h4) <- g1[as.numeric(h3)]
h5 <- h4[lapply(h4,length)<2]
for(i in 1:269){
r <- rel_data$EVTYPE==names(h5)[i]
rel_data$EVTYPE[r] <- h5[i][[1]]
}
h6 <- h4[lapply(h4,length)>1]
h7 <- h6[grep("flash",names(h6))]
for(i in 1:19){
r <- rel_data$EVTYPE==names(h7)[i]
rel_data$EVTYPE[r] <- "flash flood"
}
h8 <- h6[-(grep("flash",names(h6)))]
h9 <- h8[grep("blizzard",names(h6))]
for(i in 1:10){
r <- rel_data$EVTYPE==names(h9)[i]
rel_data$EVTYPE[r] <- "blizzard"
}
h10 <- h8[-(grep("blizzard",names(h8)))]
h11 <- h10[grep("coast",names(h10))]
for(i in 1:5){
r <- rel_data$EVTYPE==names(h11)[i]
rel_data$EVTYPE[r] <- "coastal flood"
}
h12 <- h10[-(grep("coast",names(h10)))]
grep("flood",h12, value = TRUE)
length(grep("flood",h12, value = TRUE))
h13 <- h12[grep("flood",names(h12))]
for(i in 1:15){
r <- rel_data$EVTYPE==names(h13)[i]
rel_data$EVTYPE[r] <- "flood"
}
h14 <- h12[-(grep("flood",names(h12)))]
h14
grep("snow",h14, value = TRUE)
grep("winter storm",h14, value = TRUE)
length(grep("winter storm",h14, value = TRUE))
length(grep("snow",h14, value = TRUE))
length(grep("snow|winter storm",h14, value = TRUE))
h15 <- h14[grep("snow|winter storm",names(h14))]
for(i in 1:14){
r <- rel_data$EVTYPE==names(h15)[i]
rel_data$EVTYPE[r] <- "winter storm"
}
h16 <- h14[-(grep("snow|winter storm",names(h12)))]
rel_data <- data[,c("BGN_DATE","END_DATE","EVTYPE","FATALITIES","INJURIES","REMARKS")]
trim.leading <- function (x)  sub("^\\s+", "", x)
rel_data$EVTYPE <- trim.leading(rel_data$EVTYPE)
g <- rel_data[!(rel_data$EVTYPE %in% ev_table),] ##removes exact matches
g1 <- setdiff(rel_data$EVTYPE, ev_table) ##gets typo evtypes
h1 <- sapply(ev_table, grep, x = g1) ##gets indexes of partial matches to typo evtypes
h1 <- h1[lapply(h1,length)>0] ## removes empties
h1 <- lapply(h1,as.integer)
h3 <- unique(unlist(h1))
N <- 367
h4 <- vector("list", N)
for(i in 1:N) { ## trying to get function to return index of lists of which h3[i] is an element
a <- logical()
for(j in 1:30){
a[[j]] <- h3[i] %in% h1[j][[1]]
}
b <- names(h1)[a]
h4[[i]] <- b
}
names(h4) <- g1[as.numeric(h3)]
h5 <- h4[lapply(h4,length)<2]
for(i in 1:269){
r <- rel_data$EVTYPE==names(h5)[i]
rel_data$EVTYPE[r] <- h5[i][[1]]
}
h6 <- h4[lapply(h4,length)>1]
h7 <- h6[grep("flash",names(h6))]
for(i in 1:19){
r <- rel_data$EVTYPE==names(h7)[i]
rel_data$EVTYPE[r] <- "flash flood"
}
h8 <- h6[-(grep("flash",names(h6)))]
h9 <- h8[grep("blizzard",names(h6))]
for(i in 1:10){
r <- rel_data$EVTYPE==names(h9)[i]
rel_data$EVTYPE[r] <- "blizzard"
}
h10 <- h8[-(grep("blizzard",names(h8)))]
h11 <- h10[grep("coast",names(h10))]
for(i in 1:5){
r <- rel_data$EVTYPE==names(h11)[i]
rel_data$EVTYPE[r] <- "coastal flood"
}
h12 <- h10[-(grep("coast",names(h10)))]
h13 <- h12[grep("flood",names(h12))]
for(i in 1:15){
r <- rel_data$EVTYPE==names(h13)[i]
rel_data$EVTYPE[r] <- "flood"
}
h14 <- h12[-(grep("flood",names(h12)))]
h15 <- h14[grep("snow|winter storm",names(h14))]
for(i in 1:14){
r <- rel_data$EVTYPE==names(h15)[i]
rel_data$EVTYPE[r] <- "winter storm"
}
h16 <- h14[-(grep("snow|winter storm",names(h14)))]
h16
